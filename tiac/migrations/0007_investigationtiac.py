# Generated by Django 5.2.6 on 2025-09-05 08:47

import core.mixins
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0038_alter_document_document_type"),
        ("tiac", "0006_evenementsimple_transfered_to"),
    ]

    operations = [
        migrations.CreateModel(
            name="InvestigationTiac",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "etat",
                    models.CharField(
                        choices=[
                            ("brouillon", "Brouillon"),
                            ("en_cours", "En cours"),
                            ("cloture", "Clôturé"),
                        ],
                        default="brouillon",
                        max_length=100,
                        verbose_name="État de l'événement",
                    ),
                ),
                ("numero_annee", models.IntegerField(verbose_name="Année")),
                ("numero_evenement", models.IntegerField(verbose_name="Numéro")),
                (
                    "date_creation",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date de création"),
                ),
                (
                    "date_reception",
                    models.DateField(verbose_name="Date de réception à la DD(ETS)PP"),
                ),
                (
                    "evenement_origin",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ars", "ARS"),
                            ("consommateur", "Consommateur"),
                            ("etablissement", "Établissement"),
                            ("medecin", "Médecin / Personnel médical"),
                            ("autre", "Autre"),
                        ],
                        verbose_name="Signalement déclaré par",
                    ),
                ),
                (
                    "modalites_declaration",
                    models.CharField(
                        blank=True,
                        choices=[("signalconso", "SignalConso"), ("autre", "Autre")],
                        default="signalconso",
                        verbose_name="Modalités de déclaration",
                    ),
                ),
                ("contenu", models.TextField(verbose_name="Contenu du signalement")),
                (
                    "notify_ars",
                    models.BooleanField(default=False, verbose_name="ARS informée"),
                ),
                (
                    "will_trigger_inquiry",
                    models.BooleanField(default=False, verbose_name="Enquête auprès des cas"),
                ),
                (
                    "numero_sivss",
                    models.CharField(blank=True, max_length=6, verbose_name="N° SIVSS de l'ARS"),
                ),
                (
                    "type_evenement",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("investigation par ma dd", "Investigation par ma DD"),
                            (
                                "investigation coordonnée",
                                "Investigation coordonnée / MUS informée",
                            ),
                        ],
                        max_length=100,
                        verbose_name="Type d'événement",
                    ),
                ),
                (
                    "nb_sick_persons",
                    models.IntegerField(null=True, verbose_name="Nombre de malades total"),
                ),
                (
                    "nb_sick_persons_to_hospital",
                    models.IntegerField(null=True, verbose_name="Dont conduits à l'hôpital"),
                ),
                (
                    "nb_dead_persons",
                    models.IntegerField(null=True, verbose_name="Dont décédés"),
                ),
                (
                    "datetime_first_symptoms",
                    models.DateTimeField(verbose_name="Première date et heure d'apparition des symptômes"),
                ),
                (
                    "datetime_last_symptoms",
                    models.DateTimeField(verbose_name="Dernière date et heure d'apparition des symptômes"),
                ),
                (
                    "contacts",
                    models.ManyToManyField(blank=True, to="core.contact", verbose_name="Contacts"),
                ),
                (
                    "createur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.structure",
                        verbose_name="Structure créatrice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                core.mixins.WithContactPermissionMixin,
                core.mixins.WithFreeLinkIdsMixin,
                core.mixins.WithDocumentPermissionMixin,
                core.mixins.WithMessageUrlsMixin,
                core.mixins.EmailNotificationMixin,
                models.Model,
            ),
        ),
    ]
