# Generated by Django 5.1.8 on 2025-04-10 05:44

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import ssa.models.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ssa", "0003_evenementproduit_type_evenement_source_constraint"),
    ]

    operations = [
        migrations.CreateModel(
            name="Etablissement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "siret",
                    models.CharField(
                        blank=True,
                        max_length=14,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_siret",
                                message="Le SIRET doit contenir exactement 14 chiffres",
                                regex="^[0-9]{14}$",
                            )
                        ],
                        verbose_name="SIRET de l'établissement",
                    ),
                ),
                (
                    "raison_sociale",
                    models.CharField(max_length=100, verbose_name="Raison sociale"),
                ),
                (
                    "adresse_lieu_dit",
                    models.CharField(blank=True, max_length=100, verbose_name="Adresse ou lieu-dit"),
                ),
                (
                    "commune",
                    models.CharField(blank=True, max_length=100, verbose_name="Commune"),
                ),
                (
                    "code_insee",
                    models.CharField(
                        blank=True,
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_code_insee",
                                message="Le code INSEE doit contenir exactement 5 chiffres",
                                regex="^[0-9]{5}$",
                            )
                        ],
                        verbose_name="Code INSEE de la commune",
                    ),
                ),
                (
                    "departement",
                    models.CharField(
                        choices=[
                            ("Ain", "Ain"),
                            ("Aisne", "Aisne"),
                            ("Allier", "Allier"),
                            ("Alpes-de-Haute-Provence", "Alpes-de-Haute-Provence"),
                            ("Hautes-Alpes", "Hautes-Alpes"),
                            ("Alpes-Maritimes", "Alpes-Maritimes"),
                            ("Ardèche", "Ardèche"),
                            ("Ardennes", "Ardennes"),
                            ("Ariège", "Ariège"),
                            ("Aube", "Aube"),
                            ("Aude", "Aude"),
                            ("Aveyron", "Aveyron"),
                            ("Bouches-du-Rhône", "Bouches-du-Rhône"),
                            ("Calvados", "Calvados"),
                            ("Cantal", "Cantal"),
                            ("Charente", "Charente"),
                            ("Charente-Maritime", "Charente-Maritime"),
                            ("Cher", "Cher"),
                            ("Corrèze", "Corrèze"),
                            ("Corse-du-Sud", "Corse-du-Sud"),
                            ("Haute-Corse", "Haute-Corse"),
                            ("Côte-d'Or", "Côte-d'Or"),
                            ("Côtes-d'Armor", "Côtes-d'Armor"),
                            ("Creuse", "Creuse"),
                            ("Dordogne", "Dordogne"),
                            ("Doubs", "Doubs"),
                            ("Drôme", "Drôme"),
                            ("Eure", "Eure"),
                            ("Eure-et-Loir", "Eure-et-Loir"),
                            ("Finistère", "Finistère"),
                            ("Gard", "Gard"),
                            ("Haute-Garonne", "Haute-Garonne"),
                            ("Gers", "Gers"),
                            ("Gironde", "Gironde"),
                            ("Hérault", "Hérault"),
                            ("Ille-et-Vilaine", "Ille-et-Vilaine"),
                            ("Indre", "Indre"),
                            ("Indre-et-Loire", "Indre-et-Loire"),
                            ("Isère", "Isère"),
                            ("Jura", "Jura"),
                            ("Landes", "Landes"),
                            ("Loir-et-Cher", "Loir-et-Cher"),
                            ("Loire", "Loire"),
                            ("Haute-Loire", "Haute-Loire"),
                            ("Loire-Atlantique", "Loire-Atlantique"),
                            ("Loiret", "Loiret"),
                            ("Lot", "Lot"),
                            ("Lot-et-Garonne", "Lot-et-Garonne"),
                            ("Lozère", "Lozère"),
                            ("Maine-et-Loire", "Maine-et-Loire"),
                            ("Manche", "Manche"),
                            ("Marne", "Marne"),
                            ("Haute-Marne", "Haute-Marne"),
                            ("Mayenne", "Mayenne"),
                            ("Meurthe-et-Moselle", "Meurthe-et-Moselle"),
                            ("Meuse", "Meuse"),
                            ("Morbihan", "Morbihan"),
                            ("Moselle", "Moselle"),
                            ("Nièvre", "Nièvre"),
                            ("Nord", "Nord"),
                            ("Oise", "Oise"),
                            ("Orne", "Orne"),
                            ("Pas-de-Calais", "Pas-de-Calais"),
                            ("Puy-de-Dôme", "Puy-de-Dôme"),
                            ("Pyrénées-Atlantiques", "Pyrénées-Atlantiques"),
                            ("Hautes-Pyrénées", "Hautes-Pyrénées"),
                            ("Pyrénées-Orientales", "Pyrénées-Orientales"),
                            ("Bas-Rhin", "Bas-Rhin"),
                            ("Haut-Rhin", "Haut-Rhin"),
                            ("Rhône", "Rhône"),
                            ("Haute-Saône", "Haute-Saône"),
                            ("Saône-et-Loire", "Saône-et-Loire"),
                            ("Sarthe", "Sarthe"),
                            ("Savoie", "Savoie"),
                            ("Haute-Savoie", "Haute-Savoie"),
                            ("Paris", "Paris"),
                            ("Seine-Maritime", "Seine-Maritime"),
                            ("Seine-et-Marne", "Seine-et-Marne"),
                            ("Yvelines", "Yvelines"),
                            ("Deux-Sèvres", "Deux-Sèvres"),
                            ("Somme", "Somme"),
                            ("Tarn", "Tarn"),
                            ("Tarn-et-Garonne", "Tarn-et-Garonne"),
                            ("Var", "Var"),
                            ("Vaucluse", "Vaucluse"),
                            ("Vendée", "Vendée"),
                            ("Vienne", "Vienne"),
                            ("Haute-Vienne", "Haute-Vienne"),
                            ("Vosges", "Vosges"),
                            ("Yonne", "Yonne"),
                            ("Territoire de Belfort", "Territoire de Belfort"),
                            ("Essonne", "Essonne"),
                            ("Hauts-de-Seine", "Hauts-de-Seine"),
                            ("Seine-Saint-Denis", "Seine-Saint-Denis"),
                            ("Val-de-Marne", "Val-de-Marne"),
                            ("Val-d'Oise", "Val-d'Oise"),
                            ("Guadeloupe", "Guadeloupe"),
                            ("Martinique", "Martinique"),
                            ("Guyane", "Guyane"),
                            ("La Réunion", "La Réunion"),
                            ("Mayotte", "Mayotte"),
                            ("Hors France", "Hors France"),
                        ],
                        null=True,
                    ),
                ),
                ("pays", django_countries.fields.CountryField(max_length=2, null=True)),
                (
                    "type_exploitant",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("producteur_primaire", "A - Producteur primaire"),
                            (
                                "hotellerie_restauration_cafe",
                                "B - Hôtellerie/restauration/café",
                            ),
                            ("restauration_collective", "B - Restauration collective"),
                            ("autre_detaillant", "B - Autre détaillant"),
                            (
                                "producteur_fabricant",
                                "C - Producteur / fabricant (hors restauration)",
                            ),
                            (
                                "plateforme_distribution",
                                "D - Plateforme de distribution",
                            ),
                            ("autre_entrepot", "D - Autre entrepôt"),
                            ("transporteur", "D - Transporteur"),
                            ("negociant", "D - Négociant"),
                            ("site_vente_en_ligne", "E - Site de vente en ligne"),
                            (
                                "expediteur_fournisseur_hors_ue",
                                "F - Expéditeur / fournisseur hors UE",
                            ),
                            (
                                "importateur_ue_de_pays_tiers",
                                "F - Importateur UE de pays tiers",
                            ),
                            (
                                "exportateur_ue_vers_pays_tiers",
                                "F - Exportateur UE vers pays tiers",
                            ),
                            ("autre_preciser", "Y - Autre : préciser"),
                            ("sans_objet", "Z - Sans objet"),
                        ],
                        max_length=100,
                        verbose_name="Type exploitant",
                    ),
                ),
                (
                    "position_dossier",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "detection_non_conformite",
                                "Détection de la non-conformité",
                            ),
                            (
                                "survenue_non_conformite",
                                "Survenue de la non-conformité",
                            ),
                            (
                                "detection_et_survenue_non_conformite",
                                "Détection et survenue de la non-conformité",
                            ),
                            (
                                "autre_maillon_chaine_distribution",
                                "Autre maillon de la chaîne de distribution",
                            ),
                            ("autre_preciser", "Autre : préciser"),
                        ],
                        max_length=100,
                        verbose_name="Position dossier",
                    ),
                ),
                (
                    "quantite_en_stock",
                    models.CharField(blank=True, max_length=255, verbose_name="Quantité en stock"),
                ),
                (
                    "numero_agrement",
                    models.CharField(
                        blank=True,
                        max_length=12,
                        validators=[ssa.models.validators.validate_numero_agrement],
                        verbose_name="Numéro d'agrément",
                    ),
                ),
                (
                    "evenement_produit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="etablissements",
                        to="ssa.evenementproduit",
                    ),
                ),
            ],
        ),
    ]
