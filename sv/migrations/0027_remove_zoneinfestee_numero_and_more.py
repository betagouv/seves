# Generated by Django 5.0.8 on 2024-10-24 13:10

import django.db.models.deletion
from django.db import migrations, models


def add_organisme_nuisible_and_statut_reglementaire_to_existing_fichezonedelimitee(apps, schema_editor):
    FicheZoneDelimitee = apps.get_model("sv", "FicheZoneDelimitee")
    OrganismeNuisible = apps.get_model("sv", "OrganismeNuisible")
    StatutReglementaire = apps.get_model("sv", "StatutReglementaire")

    for fiche in FicheZoneDelimitee.objects.all():
        fiche.organisme_nuisible = OrganismeNuisible.objects.first()
        fiche.statut_reglementaire = StatutReglementaire.objects.first()
        fiche.save()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0017_alter_message_message_type"),
        ("sv", "0026_zoneinfestee_rayon_zoneinfestee_unite_rayon_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="zoneinfestee",
            name="numero",
        ),
        migrations.AddField(
            model_name="fichezonedelimitee",
            name="organisme_nuisible",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="sv.organismenuisible",
                verbose_name="Organisme nuisible",
            ),
        ),
        migrations.AddField(
            model_name="fichezonedelimitee",
            name="statut_reglementaire",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="sv.statutreglementaire",
                verbose_name="Statut règlementaire de l'organisme nuisible",
            ),
        ),
        migrations.AddField(
            model_name="zoneinfestee",
            name="nom",
            field=models.CharField(blank=True, max_length=50, verbose_name="Nom de la zone infestée"),
        ),
        migrations.AlterField(
            model_name="fichezonedelimitee",
            name="rayon_zone_tampon",
            field=models.FloatField(blank=True, null=True, verbose_name="Rayon tampon réglementaire ou arbitré"),
        ),
        migrations.AlterField(
            model_name="fichezonedelimitee",
            name="unite_rayon_zone_tampon",
            field=models.CharField(
                choices=[("m", "Metre"), ("km", "Kilometre")],
                default="km",
                max_length=2,
                verbose_name="Unité du rayon tampon réglementaire ou arbitré",
            ),
        ),
        migrations.AddConstraint(
            model_name="fichedetection",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("hors_zone_infestee__isnull", True), ("zone_infestee__isnull", True)),
                    models.Q(("hors_zone_infestee__isnull", True), ("zone_infestee__isnull", False)),
                    models.Q(("hors_zone_infestee__isnull", False), ("zone_infestee__isnull", True)),
                    _connector="OR",
                ),
                name="check_hors_zone_infestee_or_zone_infestee_or_none",
            ),
        ),
        migrations.RunPython(add_organisme_nuisible_and_statut_reglementaire_to_existing_fichezonedelimitee),
        migrations.AlterField(
            model_name="fichezonedelimitee",
            name="organisme_nuisible",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="sv.organismenuisible",
                verbose_name="Organisme nuisible",
            ),
        ),
        migrations.AlterField(
            model_name="fichezonedelimitee",
            name="statut_reglementaire",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="sv.statutreglementaire",
                verbose_name="Statut règlementaire de l'organisme nuisible",
            ),
        ),
    ]
